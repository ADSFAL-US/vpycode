"""
–ú–æ–¥—É–ª—å –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∫–æ–¥–∞.
"""

import os
import tkinter as tk
import customtkinter as ctk
from tkinter import ttk

from theme import KanagawaTheme

class FileExplorer:
    """–ö–ª–∞—Å—Å –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ —Ñ–∞–π–ª–æ–≤"""
    
    def __init__(self, parent, frame):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
        
        Args:
            parent: —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            frame: —Ñ—Ä–µ–π–º, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫
        """
        self.parent = parent
        self.frame = frame
        self.current_path = None
        
        self._setup_ui()
    
    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ —Ñ–∞–π–ª–æ–≤"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞
        explorer_header = ctk.CTkFrame(self.frame, fg_color=KanagawaTheme.DARKER_BG, height=30)
        explorer_header.pack(fill="x")
        
        explorer_label = ctk.CTkLabel(
            explorer_header, 
            text="–ü–†–û–í–û–î–ù–ò–ö", 
            text_color=KanagawaTheme.FOREGROUND, 
            font=("Arial", 10, "bold")
        )
        explorer_label.pack(side="left", padx=10)
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        open_project_btn = ctk.CTkButton(
            explorer_header, 
            text="üìÇ", 
            width=25, 
            height=20, 
            fg_color="transparent", 
            hover_color=KanagawaTheme.LIGHTER_BG,
            text_color=KanagawaTheme.FOREGROUND, 
            command=self.parent.open_project
        )
        open_project_btn.pack(side="right", padx=5)
        
        # –î–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤
        self.tree_style = ttk.Style()
        self.tree_style.configure(
            "Treeview", 
            background=KanagawaTheme.BACKGROUND, 
            foreground=KanagawaTheme.FOREGROUND, 
            fieldbackground=KanagawaTheme.BACKGROUND, 
            borderwidth=0,
            rowheight=22
        )
        self.tree_style.map("Treeview", background=[("selected", KanagawaTheme.SELECTION)])
        
        self.tree_style.configure(
            "Treeview.Heading", 
            background=KanagawaTheme.DARKER_BG, 
            foreground=KanagawaTheme.FOREGROUND, 
            borderwidth=0
        )
        
        self.tree = ttk.Treeview(self.frame, style="Treeview", show="tree")
        self.tree.pack(fill="both", expand=True)
        
        # –ü–æ–ª–æ—Å–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        tree_scrollbar = ctk.CTkScrollbar(
            self.frame, 
            command=self.tree.yview,
            button_color=KanagawaTheme.SCROLLBAR,
            button_hover_color=KanagawaTheme.FOREGROUND
        )
        tree_scrollbar.pack(side="right", fill="y")
        self.tree.configure(yscrollcommand=tree_scrollbar.set)
        
        # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
        self.tree.bind("<Double-1>", self._on_item_double_click)
    
    def _on_item_double_click(self, event):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–≤–æ–π–Ω–æ–π —â–µ–ª—á–æ–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –¥–µ—Ä–µ–≤–∞"""
        item_id = self.tree.identify_row(event.y)
        if item_id:
            item_dict = self._get_item_path(item_id)
            if item_dict and os.path.isfile(item_dict["path"]):
                self.parent.load_file(item_dict["path"])
    
    def _get_item_path(self, item_id):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –ø—É—Ç—å –∫ —ç–ª–µ–º–µ–Ω—Ç—É –¥–µ—Ä–µ–≤–∞
        
        Args:
            item_id: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
            
        Returns:
            dict: —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ (path, type)
        """
        if not hasattr(self.tree, 'items_dict'):
            return None
        
        return self.tree.items_dict.get(item_id)
    
    def update_tree(self, path):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        
        Args:
            path (str): –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not os.path.exists(path):
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å
        self.current_path = path
        
        # –û—á–∏—â–∞–µ–º –¥–µ—Ä–µ–≤–æ
        for item in self.tree.get_children():
            self.tree.delete(item)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–µ–π
        self.tree.items_dict = {}
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        root_text = os.path.basename(path) or path
        root = self.tree.insert("", "end", text=f" {root_text}")
        self.tree.items_dict[root] = {"path": path, "type": "directory"}
        
        # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        self._add_directory_to_tree(path, root)
    
    def _add_directory_to_tree(self, path, parent):
        """
        –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –¥–µ—Ä–µ–≤–æ
        
        Args:
            path (str): –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            parent: —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –¥–µ—Ä–µ–≤–µ
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
            items = sorted(os.listdir(path))
            
            # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            for item in items:
                item_path = os.path.join(path, item)
                if os.path.isdir(item_path) and not item.startswith('.'):
                    item_id = self.tree.insert(parent, "end", text=f" üìÅ {item}")
                    self.tree.items_dict[item_id] = {"path": item_path, "type": "directory"}
                    # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                    self._add_directory_to_tree(item_path, item_id)
            
            # –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
            for item in items:
                item_path = os.path.join(path, item)
                if os.path.isfile(item_path) and not item.startswith('.'):
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è —Ñ–∞–π–ª–∞
                    icon = self._get_file_icon(item_path)
                    item_id = self.tree.insert(parent, "end", text=f" {icon} {item}")
                    self.tree.items_dict[item_id] = {"path": item_path, "type": "file"}
        except:
            pass
    
    def _get_file_icon(self, file_path):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        
        Args:
            file_path (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
            
        Returns:
            str: –ò–∫–æ–Ω–∫–∞ —Ñ–∞–π–ª–∞
        """
        _, ext = os.path.splitext(file_path)
        ext = ext.lower()
        
        # –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –∏ –∏–∫–æ–Ω–æ–∫
        icons = {
            '.py': 'üêç',
            '.js': 'üìù',
            '.html': 'üåê',
            '.css': 'üé®',
            '.json': 'üìã',
            '.md': 'üìò',
            '.txt': 'üìÑ',
            '.jpg': 'üñºÔ∏è',
            '.jpeg': 'üñºÔ∏è',
            '.png': 'üñºÔ∏è',
            '.gif': 'üñºÔ∏è',
            '.mp3': 'üéµ',
            '.mp4': 'üé¨',
            '.pdf': 'üìë',
            '.zip': 'üì¶',
            '.rar': 'üì¶',
            '.exe': '‚öôÔ∏è',
            '.sh': '‚öôÔ∏è',
            '.bat': '‚öôÔ∏è',
        }
        
        return icons.get(ext, 'üìÑ')
    
    def refresh(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
        if self.current_path:
            self.update_tree(self.current_path)
    
    def focus(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ–∫—É—Å –Ω–∞ –¥–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤"""
        self.tree.focus_set()
    
    def toggle(self):
        """For backwards compatibility - now handled directly in main app"""
        # Toggle is now handled by the main application
        pass 